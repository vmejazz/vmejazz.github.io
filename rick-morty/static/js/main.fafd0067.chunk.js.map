{"version":3,"sources":["components/main/style.js","components/search-field/style.js","components/search-field/search-field.tsx","components/empty-list/style.js","components/empty-list/empty-list.tsx","components/loading-page/loading-page.tsx","components/card/style.js","components/card/card.tsx","components/list-of-characters/style.js","components/page-buttons/style.js","components/page-buttons/page-buttons.tsx","components/list-of-characters/list-of-characters.tsx","components/list-of-party/style.js","components/list-of-party/list-of-party.tsx","components/main/main.tsx","components/app/app.tsx","index.tsx"],"names":["MainStyled","styled","main","H1Hidden","h1","InputStyled","input","SearchField","props","changeSeachText","type","placeholder","onChange","evt","PInfo","p","EmptyList","LoadingPage","Fragment","style","textAlign","marginTop","fontSize","xmlns","margin","width","height","display","preserveAspectRatio","viewBox","cx","cy","r","fill","stroke","strokeDasharray","strokeWidth","transform","attributeName","dur","keyTimes","repeatCount","values","CardStyled","li","CardImageStyled","img","CardButtonStyled","button","CardTitleStyled","h3","Card","character","choiceCharacter","deletedCard","showCloseButton","id","name","imgUrl","image","onClick","src","alt","stopPropagation","ListOfCharactersStyled","ul","ListButtonStyled","div","ButtonPage","PageButtons","changePageShow","info","next","prev","CHARACTERS","gql","ListOfCharacters","useState","listDeletedCard","setDeletedCard","searchText","pageQuery","cardId","some","item","useQuery","variables","pageShow","loading","error","data","characters","results","map","index","card","key","ListOfPartyStyled","H2Styled","h2","ListOfParty","partyList","Main","setSearchText","rickCard","setRickCard","mortyCard","setMortyCard","setPageShow","push","searchValue","target","value","length","characherInfo","toUpperCase","includes","page","client","ApolloClient","cache","InMemoryCache","link","HttpLink","uri","App","ApolloProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fafd0067.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const MainStyled = styled.main`\n  max-width: 810px;\n  margin: 0 auto;\n  margin-top: 140px;\n`;\n\nexport const H1Hidden = styled.h1`\n  position: absolute;\n\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n\n  white-space: nowrap;\n\n  border: 0;\n\n  clip: rect(0 0 0 0);\n  clip-path: inset(100%);\n`;\n","import styled from \"styled-components\";\n\nexport const InputStyled = styled.input`\n  box-sizing: border-box;\n  width: 100%;\n  height: 80px;\n  margin-bottom: 30px;\n  padding-left: 27px;\n\n  font-weight: 300;\n  font-size: 30px;\n  line-height: 35px;\n  font-family: Roboto;\n  color: #000000;\n  text-transform: uppercase;\n  font-style: normal;\n\n  background: #ffffff;\n  border: 1px solid #a0a0a0;\n`;\n","import * as React from \"react\";\nimport { InputStyled } from \"./style\";\n\ntype SearchFieldProps = {\n  changeSeachText: Function;\n};\n\nconst SearchField = (props: SearchFieldProps) => {\n  const { changeSeachText } = props;\n\n  return (\n    <div>\n      <InputStyled\n        type=\"text\"\n        placeholder=\"Find your rick\"\n        onChange={(evt) => changeSeachText(evt)}\n      ></InputStyled>\n    </div>\n  );\n};\n\nexport default SearchField;\n","import styled from \"styled-components\";\n\nexport const PInfo = styled.p`\n  display: block;\n  text-align: center;\n`;\n","import React from \"react\";\nimport { PInfo } from \"./style\";\n\nconst EmptyList = () => {\n  return <PInfo>Нет подходящих персонажей</PInfo>;\n};\n\nexport default EmptyList;\n","import React from \"react\";\n\nconst LoadingPage = () => {\n  return (\n    <React.Fragment>\n      <h1 style={{ textAlign: `center`, marginTop: `80px`, fontSize: `22px` }}>\n        Происходит поиск персонажей ...\n      </h1>\n      <div>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          style={{ margin: `auto` }}\n          width=\"200\"\n          height=\"200\"\n          display=\"block\"\n          preserveAspectRatio=\"xMidYMid\"\n          viewBox=\"0 0 100 100\"\n        >\n          <circle\n            cx=\"50\"\n            cy=\"50\"\n            r=\"35\"\n            fill=\"none\"\n            stroke=\"#99adba\"\n            strokeDasharray=\"164.93361431346415 56.97787143782138\"\n            strokeWidth=\"10\"\n            transform=\"rotate(99.747 50 50)\"\n          >\n            <animateTransform\n              attributeName=\"transform\"\n              dur=\"1s\"\n              keyTimes=\"0;1\"\n              repeatCount=\"indefinite\"\n              type=\"rotate\"\n              values=\"0 50 50;360 50 50\"\n            ></animateTransform>\n          </circle>\n        </svg>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default LoadingPage;\n","import styled from \"styled-components\";\n\nexport const CardStyled = styled.li`\n  position: relative;\n\n  width: 180px;\n  height: 220px;\n  margin-bottom: 30px;\n  margin-left: 30px;\n  overflow: hidden;\n  background-color: gray;\n\n`;\n\nexport const CardImageStyled = styled.img`\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n\n  background-position: center;\n  background-size: auto 100%;\n`;\n\nexport const CardButtonStyled = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n\n  width: 30px;\n  height: 30px;\n\n  background-color: #ffffff;\n  border: none;\n  border-radius: 50%;\n  outline: none;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #ffffff;\n\n    background-color: red;\n\n    &:before,\n    &::after {\n      background-color: white;\n    }\n  }\n\n  &:before,\n  &:after {\n    position: absolute;\n    top: 8px;\n    left: 14px;\n    content: \" \";\n    height: 14px;\n    width: 2px;\n    background-color: #333;\n  }\n\n  &:before {\n    transform: rotate(45deg);\n  }\n  &:after {\n    transform: rotate(-45deg);\n  }\n`;\n\nexport const CardTitleStyled = styled.h3`\n\n  position: absolute;\n  bottom: 25px;\n  margin: 0 auto;\n  width: 100%;\n  text-align: center;\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 300;\n  font-size: 24px;\n  line-height: 28px;\n\n  color: #ffffff;\n`;","import * as React from \"react\";\nimport { CardStyled, CardImageStyled, CardButtonStyled, CardTitleStyled } from \"./style\";\n\ntype characterProps = {\n  id?: number;\n  name?: string;\n  image?: string;\n};\n\ntype CardProps = {\n  character: characterProps;\n  choiceCharacter: Function;\n  deletedCard: Function;\n  showCloseButton: boolean;\n};\n\nconst Card = (props: CardProps) => {\n  const { character, choiceCharacter, deletedCard, showCloseButton } = props;\n  const { id, name, image: imgUrl } = character;\n\n  return (\n    <CardStyled onClick={() => choiceCharacter(character)}>\n      <CardTitleStyled>{name}</CardTitleStyled>\n      {imgUrl ?\n        <CardImageStyled src={imgUrl} alt={name}></CardImageStyled>\n        : null\n      }\n      {showCloseButton ? (\n        <CardButtonStyled\n          onClick={(evt) => {\n            evt.stopPropagation();\n            return deletedCard(id);\n          }}\n        ></CardButtonStyled>\n      ) : null\n      }\n    </CardStyled>\n  );\n};\n\nexport default Card;\n","import styled from \"styled-components\";\n\nexport const ListOfCharactersStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 0;\n  margin-bottom: 70px;\n  margin-left: -30px;\n  padding: 0;\n\n  list-style: none;\n`;\n","import styled from \"styled-components\";\n\nexport const ListButtonStyled = styled.div`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  margin-bottom: 70px;\n  margin-top: -70px;\n`;\n\nexport const ButtonPage = styled.button`\n  width: 100px;\n  height: 30px;\n  margin-left: 15px;\n  margin-right: 15px;\n`;\n","import * as React from \"react\";\nimport { ListButtonStyled, ButtonPage } from \"./style\";\n\ntype PageButtonsProps = {\n  info: {\n    count: number;\n    pages: number;\n    next: number;\n    prev: number;\n  };\n  changePageShow: Function;\n};\n\nconst PageButtons = (props: PageButtonsProps) => {\n  const { changePageShow, info } = props;\n  const { next, prev } = info;\n\n  return (\n    <ListButtonStyled>\n      {prev ? (\n        <ButtonPage onClick={() => changePageShow(prev)}>Prev</ButtonPage>\n      ) : null}\n      {next ? (\n        <ButtonPage onClick={() => changePageShow(next)}>Next</ButtonPage>\n      ) : null}\n    </ListButtonStyled>\n  );\n};\n\nexport default PageButtons;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport EmptyList from \"../empty-list/empty-list\";\nimport LoadingPage from \"../loading-page/loading-page\";\nimport Card from \"../card/card\";\nimport { ListOfCharactersStyled } from \"./style\";\nimport PageButtons from \"../page-buttons/page-buttons\";\n\ntype ListProps = {\n  searchText: string;\n  changePageShow: Function;\n  pageQuery: number;\n  choiceCharacter: Function;\n};\n\ntype characterProps = {\n  id?: number;\n  name?: string;\n  image?: string;\n};\n\nconst CHARACTERS = gql`\n  query getList($searchText: String!, $pageShow: Int) {\n    characters(filter: { name: $searchText }, page: $pageShow) {\n      info {\n        count\n        pages\n        next\n        prev\n      }\n      results {\n        id\n        name\n        species\n        image\n      }\n    }\n  }\n`;\n\nconst ListOfCharacters = (props: ListProps) => {\n  const [listDeletedCard, setDeletedCard] = useState([{ id: `` }]);\n  const { changePageShow, choiceCharacter, searchText, pageQuery } = props;\n\n  //* Добавляем карточку в список удаленных\n  const deletedCard = (id: string) => {\n    let cardId = { id: id };\n\n    if (!listDeletedCard.some((item) => item.id === id)) {\n      setDeletedCard((listDeletedCard) => [...listDeletedCard, cardId]);\n    }\n  };\n\n  //* Запрашиваем данные с сервера\n  let { loading, error, data } = useQuery(CHARACTERS, {\n    variables: {\n      searchText: searchText,\n      pageShow: pageQuery,\n    },\n  });\n\n  if (error) return <EmptyList />;\n  if (loading) return <LoadingPage />;\n\n  let characters = data.characters.results;\n  let info = data.characters.info;\n\n  return (\n    <React.Fragment>\n      <ListOfCharactersStyled>\n        {characters.map((item: characterProps, index: number) => {\n          if (listDeletedCard.some((card: any) => card.id === item.id)) {\n            return null;\n          }\n\n          return (\n            <Card\n              character={item}\n              key={index}\n              deletedCard={deletedCard}\n              choiceCharacter={choiceCharacter}\n              showCloseButton={true}\n            />\n          );\n        })}\n      </ListOfCharactersStyled>\n      <PageButtons info={info} changePageShow={changePageShow} />\n    </React.Fragment>\n  );\n};\n\nexport default ListOfCharacters;\n","import styled from \"styled-components\";\n\nexport const ListOfPartyStyled = styled.ul`\n  display: flex;\n  justify-content: center;\n  margin: 0;\n  margin-left: -30px;\n  padding: 0;\n\n  list-style: none;\n`;\n\nexport const H2Styled = styled.h2`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 30px;\n  line-height: 35px;\n  text-align: center;\n  text-transform: uppercase;\n`;\n","import * as React from \"react\";\nimport { ListOfPartyStyled, H2Styled } from \"./style\";\nimport Card from \"../card/card\";\n\ntype ListProps = {\n  partyList: Array<Object>;\n};\n\nconst ListOfParty = (props: ListProps) => {\n  const { partyList } = props;\n\n  return (\n    <React.Fragment>\n      <H2Styled>Party</H2Styled>\n      <ListOfPartyStyled>\n        {partyList.map((item: {}, index: number) => {\n          return (\n            <Card\n              character={item}\n              key={index}\n              choiceCharacter={() => {}}\n              deletedCard={() => {}}\n              showCloseButton={false}\n            />\n          );\n        })}\n      </ListOfPartyStyled>\n    </React.Fragment>\n  );\n};\n\nexport default ListOfParty;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { MainStyled, H1Hidden } from \"./style\";\nimport SearchField from \"../search-field/search-field\";\nimport ListOfCharacters from \"../list-of-characters/list-of-characters\";\nimport ListOfParty from \"../list-of-party/list-of-party\";\n\ntype CharacherInfoType = {\n  id: number;\n  name: string;\n  image: string;\n};\n\nconst Main = () => {\n  const EMPTY_RICK = {\n    id: -2,\n    name: \"RICK\",\n    image: \"\",\n  };\n  const EMPTY_MORTY = {\n    id: -3,\n    name: \"MORTY\",\n    image: \"\",\n  };\n\n  const [searchText, setSearchText] = useState(``);\n  const [rickCard, setRickCard] = useState(EMPTY_RICK);\n  const [mortyCard, setMortyCard] = useState(EMPTY_MORTY);\n  const [pageShow, setPageShow] = useState(1);\n\n  //* Меняем строку поиска\n  const changeSeachText: Function = (\n    evt: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const searchValue = evt.target.value;\n    if (searchValue.length > 2) {\n      setSearchText(searchValue);\n    }\n    setPageShow(1);\n  };\n\n  //* Устанавливаем карточки в Party Team\n  const choiceCharacter: Function = (characherInfo: CharacherInfoType) => {\n    if (characherInfo.name.toUpperCase().includes('RICK')) {\n      setRickCard(characherInfo);\n    }\n    if (characherInfo.name.toUpperCase().includes('MORTY')) {\n      setMortyCard(characherInfo);\n    }\n  };\n\n  //* Меняем страницы отображения\n  const changePageShow = (page: number) => {\n    setPageShow(page);\n  };\n\n  let partyList = [];\n  partyList.push(rickCard);\n  partyList.push(mortyCard);\n\n  return (\n    <MainStyled>\n      <H1Hidden>Test page Rick and Morty</H1Hidden>\n      <SearchField changeSeachText={changeSeachText} />\n      <ListOfCharacters\n        searchText={searchText}\n        pageQuery={pageShow}\n        choiceCharacter={choiceCharacter}\n        changePageShow={changePageShow}\n      />\n      <ListOfParty partyList={partyList} />\n    </MainStyled>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport Main from \"../main/main\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { ApolloClient, HttpLink, InMemoryCache } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: \"https://rickandmortyapi.com/graphql\",\n  }),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Main />\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}